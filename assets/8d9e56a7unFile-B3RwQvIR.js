var v=Object.defineProperty;var U=(t,e,i)=>e in t?v(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var n=(t,e,i)=>U(t,typeof e!="symbol"?e+"":e,i);import{a as E,r as O,i as l,b as R}from"./imageUtil-NFh1c57i.js";import{b as j}from"./utils-CORjiwlf.js";import{e as m,i8 as C,$ as D,i9 as M}from"./index-BTMYyhc6.js";import{u as k}from"./upload-DDvru8Za.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[e]="a7a0e9ca-b141-4fab-80f7-62e94504e5f2",t._sentryDebugIdIdentifier="sentry-dbid-a7a0e9ca-b141-4fab-80f7-62e94504e5f2")}catch{}})();{var u=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};u._sentryModuleMetadata=u._sentryModuleMetadata||{},u._sentryModuleMetadata[new Error().stack]=Object.assign({},u._sentryModuleMetadata[new Error().stack],{"_sentryBundlerPluginAppKey:pixai-web-app-key":!0})}var L=function(t){var e=m.useRef(t);e.current=t,C(function(){return function(){return e.current()}})};const y=t=>t instanceof a?t.createUrl():URL.createObjectURL(t),w=(t,e)=>t instanceof a?t.revokeUrl():URL.revokeObjectURL(e);function z(t){const e=m.useRef(),i=m.useRef();return t!==i.current&&(e.current&&w(i.current,e.current),t?e.current=y(t):e.current=void 0,i.current=t),L(()=>{e.current&&w(i.current,e.current)}),e.current}async function I(t,e){const i=y(t);try{return await e(i)}finally{i&&w(t,i)}}class a{constructor(e,i){n(this,"obj");n(this,"name");n(this,"file");n(this,"media");n(this,"url");n(this,"rc");n(this,"dimCache");this.obj=e,this.name=i,this.rc=0,this.file=e.file,this.media=e.media}static fromMedia(e,i=`pixai-media_${e.id}.${j({media:e})}`){return new a({media:e},i)}static fromFile(e,i=e.name){return new a({file:e},i)}static async fromCanvas(e,i="canvas.png",r="image/png"){const s=await new Promise(h=>e.toBlob(h,r));if(!s)throw new Error("Canvas to blob failed");return a.fromFile(new File([s],i,{type:r}))}static async fromOffscreenCanvas(e,i="canvas.png",r="image/png"){const s=await e.convertToBlob({type:r});if(!s)throw new Error("Offscreen canvas to blob failed");return a.fromFile(new File([s],i,{type:r}))}ifIs(e,i){if(this.obj[e])return i(this.obj[e])}ifHas(e,i){if(this[e])return i(this[e])}createUrl(){if(this.url)return this.rc&&this.rc++,this.url;if(this.file)return this.rc++,this.url=URL.createObjectURL(this.file);if(this.media){if(this.url=D(this.media),!this.url)throw new Error("Media has no public URL");return this.rc++,this.url}throw new Error("No file or media, this should be unreachable")}revokeUrl(){!this.url||this.rc<=0||(this.rc--,this.rc===0&&(URL.revokeObjectURL(this.url),this.url=void 0))}async toCompressed(e){const{maxWidthOrHeight:i=2048,maxSizeMB:r=4,divisibleBy:s,preferExistingMedia:h=!0,onCompressed:d}=e,o=await this.getDimensions();if(await(async()=>s&&(o.width%s||o.height%s)?!1:h&&this.media?!0:!(o.width>i||o.height>i||(await this.toFile()).size>r*1024*1024))())return this;let f=await this.toFile();if(s){const{width:g,height:b}=E({...o,divisibleBy:s,maxEdge:i});if(!g||!b)throw new Error("Invalid compressed dimensions");f=await O(f,g,b)}let c;try{c=await l(f,{maxWidthOrHeight:i,maxSizeMB:r,useWebWorker:!0,fileType:"image/webp"})}catch{try{c=await l(f,{maxWidthOrHeight:i,maxSizeMB:r,useWebWorker:!0,fileType:"image/png"})}catch{c=await l(f,{maxWidthOrHeight:i,maxSizeMB:r,fileType:"image/png"})}}const p=a.fromFile(c);return await(d==null?void 0:d(p)),p}async toFile(){if(this.file)return this.file;if(this.media){if(this.file=await M(this.obj.media),!this.file)throw new Error("Download media failed");return this.file}throw new Error("No file or media, this should be unreachable")}async _toMedia(e){if(this.media)return this.media;if(this.file)return this.media=(await k(this.file,e)).media;throw new Error("No file or media, this should be unreachable")}async toMedia({uploadMedia:e,...i}){return(await this.toCompressed(i))._toMedia(e)}getDimensions(){return this.dimCache||(this.dimCache=this._getDimensions()),this.dimCache}async _getDimensions(){if(this.media){const{width:e,height:i}=this.media;if(e&&i)return{width:e,height:i}}return I(this,R)}}export{a as U,z as a,I as b,L as u};
//# sourceMappingURL=unFile-B3RwQvIR.js.map
